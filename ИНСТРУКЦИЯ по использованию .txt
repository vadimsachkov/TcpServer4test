TCP-сервер для тестирования доступности подключения и порта  
Версия на C++

Автор: Вадим Сачков  
Дата: 2025-02-06

---

1. Общее описание

Это простой многопоточный TCP-сервер, написанный на C++, предназначенный для тестирования доступности порта и TCP-соединения.  
Его основная задача — убедиться, что сервер доступен по заданному TCP-порту, например, для проверки проброса портов на роутере, настройки фаервола или удалённого доступа по сети.

Клиенты могут подключаться, отправлять сообщения и получать ответы. Также сервер периодически отправляет временные "heartbeat"-сообщения, подтверждая стабильность соединения.

В отличие от ICMP-пинга, сервер работает на уровне TCP и может использоваться там, где ICMP заблокирован или недоступен.

---

2. Возможности

- Принимает до 10 одновременных TCP-подключений
- Каждые 5 секунд отправляет клиенту отметку времени, если тот не печатает
- Возвращает отправленные клиентом строки (до 100 символов)
- Поддерживает отключение клиента по "q" или клавише ESC
- Выводит информацию о подключениях в консоль сервера

---

3. Системные требования

- Windows с поддержкой Winsock (WS2_32.dll)
- Компилятор MinGW (g++) или MSVC (Visual Studio)
- Фаервол должен разрешать входящие соединения на выбранный TCP-порт (по умолчанию: 1088)
- Для внешних подключений: настроенный проброс порта (dst-nat) на роутере

---

4. Запуск сервера

Команда:
    tcpserver4test.exe [порт]

Если порт не указан — используется 1088 по умолчанию.

Пример:
    tcpserver4test.exe 5555

После запуска сервер начинает прослушивать соединения и отображает информацию о подключениях.

---

5. Подключение к серверу

Можно использовать Telnet, Netcat или любой другой TCP-клиент.

Telnet:
    telnet IP_СЕРВЕРА 1088

Замените IP_СЕРВЕРА на реальный IP-адрес.

Netcat (для локального теста):
    nc 127.0.0.1 1088

---

6. Команды и взаимодействие с сервером

Ввод клиента             | Ответ сервера
-------------------------|-------------------------------
q + Enter                | Завершает соединение
ESC (код ASCII 27)       | Немедленно закрывает соединение
Текст + Enter            | Ответ: "Received: <ваш текст>"
> 100 символов           | Лишние символы игнорируются
(пауза, нет ввода)       | Каждые 5 секунд:
                         | `<номер> #<ID соединения> <IP>:<порт> - <время>`

Пример:
    3 #2 192.168.1.10:52918 - 2025-03-28 15:40:10

---

7. Завершение работы сервера

Для остановки сервера нажмите Ctrl + C в консоли или закройте окно терминала.

---

8. Инструкция по компиляции

MinGW (g++):

    g++ -o tcpserver.exe tcpserver4test.cpp -lws2_32 -std=c++11

MSVC (Visual Studio):

    cl /EHsc tcpserver4test.cpp ws2_32.lib

Скомпилированный исполняемый файл `tcpserver.exe` можно запускать через командную строку.

---

9. Области применения

- Проверка доступности TCP-порта с удалённой или локальной сети
- Диагностика NAT, проброса портов и маршрутизации
- Анализ блокировки со стороны фаервола или провайдера
- Альтернатива ICMP-пингу в ограниченных сетях
- Простой способ реализации TCP "heartbeat"-сигналов

---

10. Контакты

Автор: Вадим Сачков  
[Добавьте ссылку на GitHub или e-mail при необходимости]
